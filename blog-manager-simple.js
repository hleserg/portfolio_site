// –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –±–ª–æ–≥–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
class SimpleBlogManager {
    constructor() {
        this.articles = [];
        this.currentPage = 1;
        this.articlesPerPage = 3;
        this.totalPages = 1;
    }

    async init() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–ª–æ–≥–∞...');
        this.loadArticles();
        this.renderBlog();
    }

    // –°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π (–¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—ã–µ —Å—é–¥–∞)
    loadArticles() {
        this.articles = [
            {
                title: '–¢–æ–ø-5 —Å–ø–æ—Å–æ–±–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ 1–°: –æ—Ç REST API –¥–æ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î',
                date: new Date(2025, 7, 24), // 24 –∞–≤–≥—É—Å—Ç–∞ 2025 (–º–µ—Å—è—Ü—ã —Å 0)
                slug: 'top-5-sposobov-integracii-1c',
                excerpt: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ 1–° —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏. REST API, SOAP, —Ñ–∞–π–ª–æ–≤—ã–π –æ–±–º–µ–Ω, COM-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –ë–î ‚Äî –≤—ã–±–∏—Ä–∞–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏.',
                readTime: '25 –º–∏–Ω',
                tags: ['1–° –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', 'REST API', 'SOAP', 'COM —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö']
            }
        ];

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
        this.articles.sort((a, b) => b.date - a.date);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
        this.totalPages = Math.ceil(this.articles.length / this.articlesPerPage);
        
        console.log(`üìö –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å—Ç–∞—Ç–µ–π: ${this.articles.length}`);
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–ª–æ–≥–∞
    renderBlog() {
        const blogContainer = document.querySelector('.blog__articles');
        if (!blogContainer) return;

        // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—å–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const startIndex = (this.currentPage - 1) * this.articlesPerPage;
        const endIndex = startIndex + this.articlesPerPage;
        const currentArticles = this.articles.slice(startIndex, endIndex);

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –±—É–¥—É—â–∏—Ö —Å—Ç–∞—Ç–µ–π (–≤—Å–µ–≥–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 3 –∫–∞—Ä—Ç–æ—á–∫–∏)
        const placeholdersNeeded = 3 - currentArticles.length;
        const placeholders = Array(placeholdersNeeded).fill(null);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è —Å—Ç–∞—Ç–µ–π –∏ –∑–∞–≥–ª—É—à–µ–∫
        const articlesHTML = currentArticles.map(article => this.renderArticleCard(article)).join('');
        const placeholdersHTML = placeholders.map(() => this.renderPlaceholderCard()).join('');
        
        blogContainer.innerHTML = articlesHTML + placeholdersHTML;

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
        this.renderPagination();
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç—å–∏
    renderArticleCard(article) {
        const formattedDate = this.formatDate(article.date);
        const tagsHTML = article.tags.map(tag => `<span class="blog-card__tag">${tag}</span>`).join('');

        return `
            <article class="blog-card">
                <div class="blog-card__content">
                    <div class="blog-card__meta">
                        <time class="blog-card__date">${formattedDate}</time>
                        <span class="blog-card__read-time">${article.readTime}</span>
                    </div>
                    
                    <h3 class="blog-card__title">
                        <a href="/blog/${article.slug}/" class="blog-card__title-link">
                            ${article.title}
                            <span class="blog-card__arrow">‚Üí</span>
                        </a>
                    </h3>
                    
                    <p class="blog-card__excerpt">${article.excerpt}</p>
                    
                    <div class="blog-card__tags">
                        ${tagsHTML}
                    </div>
                </div>
            </article>
        `;
    }

    // –ö–∞—Ä—Ç–æ—á–∫–∞-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–∏—Ö —Å—Ç–∞—Ç–µ–π
    renderPlaceholderCard() {
        return `
            <article class="blog-card blog-card--placeholder">
                <div class="blog-card__content">
                    <div class="blog-card__meta">
                        <time class="blog-card__date">–°–∫–æ—Ä–æ</time>
                        <span class="blog-card__read-time">~ –º–∏–Ω</span>
                    </div>
                    
                    <h3 class="blog-card__title">
                        <span class="blog-card__placeholder-text">
                            –ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
                            <span class="blog-card__arrow">‚è≥</span>
                        </span>
                    </h3>
                    
                    <p class="blog-card__excerpt">–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏! –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –Ω–æ–≤–∞—è –ø–æ–ª–µ–∑–Ω–∞—è —Å—Ç–∞—Ç—å—è –æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ 1–°.</p>
                    
                    <div class="blog-card__tags">
                        <span class="blog-card__tag">–°–∫–æ—Ä–æ</span>
                        <span class="blog-card__tag">1–°</span>
                    </div>
                </div>
            </article>
        `;
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    renderPagination() {
        const paginationContainer = document.querySelector('.blog__pagination');
        if (!paginationContainer || this.totalPages <= 1) {
            if (paginationContainer) paginationContainer.style.display = 'none';
            return;
        }

        paginationContainer.style.display = 'flex';

        let paginationHTML = '';

        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if (this.currentPage > 1) {
            paginationHTML += `
                <button class="blog-pagination__btn" data-page="${this.currentPage - 1}">
                    ‚Üê –ù–∞–∑–∞–¥
                </button>
            `;
        }

        // –ù–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
        for (let i = 1; i <= this.totalPages; i++) {
            const isActive = i === this.currentPage ? ' blog-pagination__btn--active' : '';
            paginationHTML += `
                <button class="blog-pagination__btn${isActive}" data-page="${i}">
                    ${i}
                </button>
            `;
        }

        // –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
        if (this.currentPage < this.totalPages) {
            paginationHTML += `
                <button class="blog-pagination__btn" data-page="${this.currentPage + 1}">
                    –í–ø–µ—Ä–µ–¥ ‚Üí
                </button>
            `;
        }

        paginationContainer.innerHTML = `
            <div class="blog-pagination">
                ${paginationHTML}
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        paginationContainer.querySelectorAll('.blog-pagination__btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const page = parseInt(e.target.dataset.page);
                if (page && page !== this.currentPage) {
                    this.currentPage = page;
                    this.renderBlog();
                    
                    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –Ω–∞—á–∞–ª—É –±–ª–æ–≥–∞
                    document.querySelector('#blog').scrollIntoView({ 
                        behavior: 'smooth' 
                    });
                }
            });
        });
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    formatDate(date) {
        return date.toLocaleDateString('ru-RU', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
    addArticle(article) {
        this.articles.unshift(article); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
        this.articles.sort((a, b) => b.date - a.date); // –ü–µ—Ä–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤—ã–≤–∞–µ–º
        this.totalPages = Math.ceil(this.articles.length / this.articlesPerPage);
        this.renderBlog();
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç–∞—Ç—å—è: ${article.title}`);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    const blogManager = new SimpleBlogManager();
    blogManager.init();
    
    // –î–µ–ª–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π
    window.blogManager = blogManager;
});
