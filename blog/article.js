document.addEventListener('DOMContentLoaded', function() {
    console.log('üìù –°—Ç–∞—Ç—å—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞...');

    // Theme management –¥–ª—è —Å—Ç–∞—Ç–µ–π - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    const themeToggle = document.getElementById('themeToggle');
    
    if (themeToggle) {
        console.log('üé® article.js: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–µ–º—ã...');
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∫–æ–Ω–∫–∏ (–Ω–µ –≤–º–µ—à–∏–≤–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É)
        function syncThemeIcon() {
            const icon = themeToggle.querySelector('.theme-toggle__icon');
            if (icon) {
                const currentTheme = document.documentElement.getAttribute('data-color-scheme') || 
                                   document.body.getAttribute('data-theme') || 'light';
                const correctIcon = currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
                
                if (icon.textContent !== correctIcon) {
                    console.log('üé® article.js: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∫–æ–Ω–∫–∏:', currentTheme, '->', correctIcon);
                    icon.textContent = correctIcon;
                }
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        setTimeout(syncThemeIcon, 100);
        
        // –¢–æ–ª—å–∫–æ —Å–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (–Ω–µ —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã)
        const observer = new MutationObserver(function() {
            setTimeout(syncThemeIcon, 10);
        });
        
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ['data-color-scheme']
        });
        
        observer.observe(document.body, {
            attributes: true,
            attributeFilter: ['data-theme']
        });
        
        console.log('üé® article.js: –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ "–ù–∞–≤–µ—Ä—Ö"
    function initScrollToTop() {
        const scrollToTopBtn = document.getElementById('scrollToTop');
        
        if (!scrollToTopBtn) return;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
        function toggleScrollButton() {
            if (window.pageYOffset > 300) {
                scrollToTopBtn.classList.add('visible');
            } else {
                scrollToTopBtn.classList.remove('visible');
            }
        }

        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö
        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        window.addEventListener('scroll', toggleScrollButton);
        scrollToTopBtn.addEventListener('click', scrollToTop);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        toggleScrollButton();
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–≤–µ—Ä—Ö"
    initScrollToTop();

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    function enhanceCodeBlocks() {
        const codeBlocks = document.querySelectorAll('pre code');
        
        codeBlocks.forEach(function(codeBlock) {
            const preElement = codeBlock.parentElement;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–æ–∫ –¥–ª—è –±–æ–ª—å—à–∏—Ö –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
            const lines = codeBlock.textContent.split('\n');
            if (lines.length > 5) {
                codeBlock.classList.add('with-line-numbers');
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            if (!preElement.querySelector('.code-copy-btn')) {
                const copyBtn = document.createElement('button');
                copyBtn.className = 'code-copy-btn';
                copyBtn.innerHTML = 'üìã';
                copyBtn.setAttribute('aria-label', '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥');
                copyBtn.setAttribute('title', '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
                
                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
                copyBtn.addEventListener('click', async function() {
                    try {
                        await navigator.clipboard.writeText(codeBlock.textContent);
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
                        copyBtn.innerHTML = '‚úÖ';
                        copyBtn.classList.add('copied');
                        
                        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                        setTimeout(() => {
                            copyBtn.innerHTML = 'üìã';
                            copyBtn.classList.remove('copied');
                        }, 2000);
                        
                    } catch (err) {
                        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ', err);
                        
                        // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
                        const textArea = document.createElement('textarea');
                        textArea.value = codeBlock.textContent;
                        document.body.appendChild(textArea);
                        textArea.select();
                        
                        try {
                            document.execCommand('copy');
                            copyBtn.innerHTML = '‚úÖ';
                            copyBtn.classList.add('copied');
                            
                            setTimeout(() => {
                                copyBtn.innerHTML = 'üìã';
                                copyBtn.classList.remove('copied');
                            }, 2000);
                        } catch (fallbackErr) {
                            console.error('Fallback –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–∫–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ', fallbackErr);
                        }
                        
                        document.body.removeChild(textArea);
                    }
                });
                
                preElement.appendChild(copyBtn);
            }
        });
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–∏—è
    enhanceCodeBlocks();
});
